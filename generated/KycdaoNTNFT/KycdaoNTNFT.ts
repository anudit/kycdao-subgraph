// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminChanged1 extends ethereum.Event {
  get params(): AdminChanged1__Params {
    return new AdminChanged1__Params(this);
  }
}

export class AdminChanged1__Params {
  _event: AdminChanged1;

  constructor(event: AdminChanged1) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BeaconUpgraded1 extends ethereum.Event {
  get params(): BeaconUpgraded1__Params {
    return new BeaconUpgraded1__Params(this);
  }
}

export class BeaconUpgraded1__Params {
  _event: BeaconUpgraded1;

  constructor(event: BeaconUpgraded1) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized1 extends ethereum.Event {
  get params(): Initialized1__Params {
    return new Initialized1__Params(this);
  }
}

export class Initialized1__Params {
  _event: Initialized1;

  constructor(event: Initialized1) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StorageVersionUpdated extends ethereum.Event {
  get params(): StorageVersionUpdated__Params {
    return new StorageVersionUpdated__Params(this);
  }
}

export class StorageVersionUpdated__Params {
  _event: StorageVersionUpdated;

  constructor(event: StorageVersionUpdated) {
    this._event = event;
  }

  get newVersion(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Upgraded1 extends ethereum.Event {
  get params(): Upgraded1__Params {
    return new Upgraded1__Params(this);
  }
}

export class Upgraded1__Params {
  _event: Upgraded1;

  constructor(event: Upgraded1) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class KycdaoNTNFT extends ethereum.SmartContract {
  static bind(address: Address): KycdaoNTNFT {
    return new KycdaoNTNFT("KycdaoNTNFT", address);
  }

  getImplementation(): Address {
    let result = super.call(
      "getImplementation",
      "getImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getImplementation",
      "getImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_TIER(): string {
    let result = super.call("DEFAULT_TIER", "DEFAULT_TIER():(string)", []);

    return result[0].toString();
  }

  try_DEFAULT_TIER(): ethereum.CallResult<string> {
    let result = super.tryCall("DEFAULT_TIER", "DEFAULT_TIER():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SECS_IN_YEAR(): BigInt {
    let result = super.call("SECS_IN_YEAR", "SECS_IN_YEAR():(uint256)", []);

    return result[0].toBigInt();
  }

  try_SECS_IN_YEAR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("SECS_IN_YEAR", "SECS_IN_YEAR():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  SUBSCRIPTION_COST_DECIMALS(): BigInt {
    let result = super.call(
      "SUBSCRIPTION_COST_DECIMALS",
      "SUBSCRIPTION_COST_DECIMALS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_SUBSCRIPTION_COST_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "SUBSCRIPTION_COST_DECIMALS",
      "SUBSCRIPTION_COST_DECIMALS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WEI_TO_NATIVE_DECIMALS(): BigInt {
    let result = super.call(
      "WEI_TO_NATIVE_DECIMALS",
      "WEI_TO_NATIVE_DECIMALS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_WEI_TO_NATIVE_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "WEI_TO_NATIVE_DECIMALS",
      "WEI_TO_NATIVE_DECIMALS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRequiredMintCostForCode(_auth_code: BigInt, _dst: Address): BigInt {
    let result = super.call(
      "getRequiredMintCostForCode",
      "getRequiredMintCostForCode(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_auth_code),
        ethereum.Value.fromAddress(_dst)
      ]
    );

    return result[0].toBigInt();
  }

  try_getRequiredMintCostForCode(
    _auth_code: BigInt,
    _dst: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequiredMintCostForCode",
      "getRequiredMintCostForCode(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_auth_code),
        ethereum.Value.fromAddress(_dst)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRequiredMintCostForSeconds(_seconds: BigInt): BigInt {
    let result = super.call(
      "getRequiredMintCostForSeconds",
      "getRequiredMintCostForSeconds(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_seconds)]
    );

    return result[0].toBigInt();
  }

  try_getRequiredMintCostForSeconds(
    _seconds: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequiredMintCostForSeconds",
      "getRequiredMintCostForSeconds(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_seconds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSubscriptionCostPerYearUSD(): BigInt {
    let result = super.call(
      "getSubscriptionCostPerYearUSD",
      "getSubscriptionCostPerYearUSD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSubscriptionCostPerYearUSD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubscriptionCostPerYearUSD",
      "getSubscriptionCostPerYearUSD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasValidToken(_addr: Address): boolean {
    let result = super.call("hasValidToken", "hasValidToken(address):(bool)", [
      ethereum.Value.fromAddress(_addr)
    ]);

    return result[0].toBoolean();
  }

  try_hasValidToken(_addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasValidToken",
      "hasValidToken(address):(bool)",
      [ethereum.Value.fromAddress(_addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  metadataBaseURI(): string {
    let result = super.call(
      "metadataBaseURI",
      "metadataBaseURI():(string)",
      []
    );

    return result[0].toString();
  }

  try_metadataBaseURI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "metadataBaseURI",
      "metadataBaseURI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nativeUSDPriceFeed(): Address {
    let result = super.call(
      "nativeUSDPriceFeed",
      "nativeUSDPriceFeed():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_nativeUSDPriceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nativeUSDPriceFeed",
      "nativeUSDPriceFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  sendGasOnAuthorization(): BigInt {
    let result = super.call(
      "sendGasOnAuthorization",
      "sendGasOnAuthorization():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sendGasOnAuthorization(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sendGasOnAuthorization",
      "sendGasOnAuthorization():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  storageVersion(): string {
    let result = super.call("storageVersion", "storageVersion():(string)", []);

    return result[0].toString();
  }

  try_storageVersion(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "storageVersion",
      "storageVersion():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  subscriptionCostPerYear(): BigInt {
    let result = super.call(
      "subscriptionCostPerYear",
      "subscriptionCostPerYear():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_subscriptionCostPerYear(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "subscriptionCostPerYear",
      "subscriptionCostPerYear():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenExpiry(_tokenId: BigInt): BigInt {
    let result = super.call("tokenExpiry", "tokenExpiry(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_tokenExpiry(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenExpiry",
      "tokenExpiry(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenTier(_tokenId: BigInt): string {
    let result = super.call("tokenTier", "tokenTier(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenTier(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenTier", "tokenTier(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verificationDataBaseURI(): string {
    let result = super.call(
      "verificationDataBaseURI",
      "verificationDataBaseURI():(string)",
      []
    );

    return result[0].toString();
  }

  try_verificationDataBaseURI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "verificationDataBaseURI",
      "verificationDataBaseURI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class InitProxyCall extends ethereum.Call {
  get inputs(): InitProxyCall__Inputs {
    return new InitProxyCall__Inputs(this);
  }

  get outputs(): InitProxyCall__Outputs {
    return new InitProxyCall__Outputs(this);
  }
}

export class InitProxyCall__Inputs {
  _call: InitProxyCall;

  constructor(call: InitProxyCall) {
    this._call = call;
  }

  get _logic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitProxyCall__Outputs {
  _call: InitProxyCall;

  constructor(call: InitProxyCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _migrateCall extends ethereum.Call {
  get inputs(): _migrateCall__Inputs {
    return new _migrateCall__Inputs(this);
  }

  get outputs(): _migrateCall__Outputs {
    return new _migrateCall__Outputs(this);
  }
}

export class _migrateCall__Inputs {
  _call: _migrateCall;

  constructor(call: _migrateCall) {
    this._call = call;
  }
}

export class _migrateCall__Outputs {
  _call: _migrateCall;

  constructor(call: _migrateCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class AuthorizeMintWithCodeCall extends ethereum.Call {
  get inputs(): AuthorizeMintWithCodeCall__Inputs {
    return new AuthorizeMintWithCodeCall__Inputs(this);
  }

  get outputs(): AuthorizeMintWithCodeCall__Outputs {
    return new AuthorizeMintWithCodeCall__Outputs(this);
  }
}

export class AuthorizeMintWithCodeCall__Inputs {
  _call: AuthorizeMintWithCodeCall;

  constructor(call: AuthorizeMintWithCodeCall) {
    this._call = call;
  }

  get _auth_code(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _dst(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _metadata_cid(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _expiry(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _seconds_to_pay(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _verification_tier(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class AuthorizeMintWithCodeCall__Outputs {
  _call: AuthorizeMintWithCodeCall;

  constructor(call: AuthorizeMintWithCodeCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataBaseURI_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get nativeUSDPriceFeedAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintWithCodeCall extends ethereum.Call {
  get inputs(): MintWithCodeCall__Inputs {
    return new MintWithCodeCall__Inputs(this);
  }

  get outputs(): MintWithCodeCall__Outputs {
    return new MintWithCodeCall__Outputs(this);
  }
}

export class MintWithCodeCall__Inputs {
  _call: MintWithCodeCall;

  constructor(call: MintWithCodeCall) {
    this._call = call;
  }

  get _auth_code(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintWithCodeCall__Outputs {
  _call: MintWithCodeCall;

  constructor(call: MintWithCodeCall) {
    this._call = call;
  }
}

export class MintWithSignatureCall extends ethereum.Call {
  get inputs(): MintWithSignatureCall__Inputs {
    return new MintWithSignatureCall__Inputs(this);
  }

  get outputs(): MintWithSignatureCall__Outputs {
    return new MintWithSignatureCall__Outputs(this);
  }
}

export class MintWithSignatureCall__Inputs {
  _call: MintWithSignatureCall;

  constructor(call: MintWithSignatureCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): string {
    return this._call.inputValues[1].value.toString();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): string {
    return this._call.inputValues[4].value.toString();
  }

  get value5(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class MintWithSignatureCall__Outputs {
  _call: MintWithSignatureCall;

  constructor(call: MintWithSignatureCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SendBalanceToCall extends ethereum.Call {
  get inputs(): SendBalanceToCall__Inputs {
    return new SendBalanceToCall__Inputs(this);
  }

  get outputs(): SendBalanceToCall__Outputs {
    return new SendBalanceToCall__Outputs(this);
  }
}

export class SendBalanceToCall__Inputs {
  _call: SendBalanceToCall;

  constructor(call: SendBalanceToCall) {
    this._call = call;
  }

  get recipient_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SendBalanceToCall__Outputs {
  _call: SendBalanceToCall;

  constructor(call: SendBalanceToCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetMetadataBaseURICall extends ethereum.Call {
  get inputs(): SetMetadataBaseURICall__Inputs {
    return new SetMetadataBaseURICall__Inputs(this);
  }

  get outputs(): SetMetadataBaseURICall__Outputs {
    return new SetMetadataBaseURICall__Outputs(this);
  }
}

export class SetMetadataBaseURICall__Inputs {
  _call: SetMetadataBaseURICall;

  constructor(call: SetMetadataBaseURICall) {
    this._call = call;
  }

  get baseURI_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetMetadataBaseURICall__Outputs {
  _call: SetMetadataBaseURICall;

  constructor(call: SetMetadataBaseURICall) {
    this._call = call;
  }
}

export class SetPriceFeedCall extends ethereum.Call {
  get inputs(): SetPriceFeedCall__Inputs {
    return new SetPriceFeedCall__Inputs(this);
  }

  get outputs(): SetPriceFeedCall__Outputs {
    return new SetPriceFeedCall__Outputs(this);
  }
}

export class SetPriceFeedCall__Inputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }

  get address_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceFeedCall__Outputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }
}

export class SetSendGasOnAuthorizationCall extends ethereum.Call {
  get inputs(): SetSendGasOnAuthorizationCall__Inputs {
    return new SetSendGasOnAuthorizationCall__Inputs(this);
  }

  get outputs(): SetSendGasOnAuthorizationCall__Outputs {
    return new SetSendGasOnAuthorizationCall__Outputs(this);
  }
}

export class SetSendGasOnAuthorizationCall__Inputs {
  _call: SetSendGasOnAuthorizationCall;

  constructor(call: SetSendGasOnAuthorizationCall) {
    this._call = call;
  }

  get value_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSendGasOnAuthorizationCall__Outputs {
  _call: SetSendGasOnAuthorizationCall;

  constructor(call: SetSendGasOnAuthorizationCall) {
    this._call = call;
  }
}

export class SetSubscriptionCostCall extends ethereum.Call {
  get inputs(): SetSubscriptionCostCall__Inputs {
    return new SetSubscriptionCostCall__Inputs(this);
  }

  get outputs(): SetSubscriptionCostCall__Outputs {
    return new SetSubscriptionCostCall__Outputs(this);
  }
}

export class SetSubscriptionCostCall__Inputs {
  _call: SetSubscriptionCostCall;

  constructor(call: SetSubscriptionCostCall) {
    this._call = call;
  }

  get value_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSubscriptionCostCall__Outputs {
  _call: SetSubscriptionCostCall;

  constructor(call: SetSubscriptionCostCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SetVerifiedTokenCall extends ethereum.Call {
  get inputs(): SetVerifiedTokenCall__Inputs {
    return new SetVerifiedTokenCall__Inputs(this);
  }

  get outputs(): SetVerifiedTokenCall__Outputs {
    return new SetVerifiedTokenCall__Outputs(this);
  }
}

export class SetVerifiedTokenCall__Inputs {
  _call: SetVerifiedTokenCall;

  constructor(call: SetVerifiedTokenCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _verified(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetVerifiedTokenCall__Outputs {
  _call: SetVerifiedTokenCall;

  constructor(call: SetVerifiedTokenCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UpdateExpiryCall extends ethereum.Call {
  get inputs(): UpdateExpiryCall__Inputs {
    return new UpdateExpiryCall__Inputs(this);
  }

  get outputs(): UpdateExpiryCall__Outputs {
    return new UpdateExpiryCall__Outputs(this);
  }
}

export class UpdateExpiryCall__Inputs {
  _call: UpdateExpiryCall;

  constructor(call: UpdateExpiryCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateExpiryCall__Outputs {
  _call: UpdateExpiryCall;

  constructor(call: UpdateExpiryCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
